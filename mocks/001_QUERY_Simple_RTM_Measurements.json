{
    "name": "RTM Measurements",
    "query": {
        "inputtype": "Raw",
        "type": "Simple",
        "datasource": {
            "url": "/rtm/rest/measurement/find",
            "method": "Post",
            "data": {
                "selectors1": [
                    {
                        "textFilters": [
                            {
                                "key": "eId",
                                "value": "JUnit_Dynamic",
                                "regex": "false"
                            },
                            {
                                "key": "name",
                                "value": "Transaction_1",
                                "regex": "false"
                            }
                        ],
                        "numericalFilters": []
                    }
                ],
                "serviceParams": {
                    "measurementService.nextFactor": "0",
                    "aggregateService.sessionId": "defaultSid",
                    "aggregateService.granularity": "auto",
                    "aggregateService.groupby": "name",
                    "aggregateService.cpu": "1",
                    "aggregateService.partition": "8",
                    "aggregateService.timeout": "600"
                }
            },
            "postproc": {
                "lineChart": {
                    "function": "function(response){\
                        var retData = [];\
                        var index = {};\
                        var payload = response.data.payload;\
                        for (var i = 0; i < payload.length; i++) {\
                            var curSeries = payload[i].name;\
                            if (!index[curSeries]) {\
                                retData.push({\
                                    values: [],\
                                    key: curSeries,\
                                    color: '#ff7f0e',\
                                    strokeWidth: 2,\
                                    classed: 'dashed'\
                                });\
                                index[curSeries] = retData.length - 1;\
                            }\
                            retData[index[curSeries]].values.push({ x: payload[i].begin, y: payload[i].value });\
                        }\
                    return retData;\
                    }",
                    "abs": {
                        "title": "time",
                        "unit": "seconds"
                    },
                    "ord": {
                        "title": "duration",
                        "unit": "ms"
                    },
                    "transformations": [
                        {
                            "path": "timestamp",
                            "function": "function () {Math.random().toString(36).substr(2, 9);}"
                        }
                    ]
                },
                "table": {
                    "function": "function(response) {return response.data.payload;}",
                    "defaults": [
                        {
                            "sortBy": "name"
                        }
                    ],
                    "transformations": [
                        {
                            "path": "timestamp",
                            "function": "function() {Math.random().toString(36).substr(2, 9);}"
                        }
                    ]
                }
            }
        }
    }
}